#include <stdio.h>
#include <string.h>
#include "dasm_proto.h"

| .arch armv7a
| .section code
| .globals lbl_
| .actionlist test_actions

#include "dasm_armv7a.h"


int main(int argc, char** argv)
{
    unsigned npc = 8;
    unsigned nextpc = 0;

    dasm_State* state;
    dasm_init(&state, DASM_MAXSECTION);
    void* labels[lbl__MAX];
    dasm_setupglobal(&state, labels, lbl__MAX);
    dasm_setup(&state, test_actions);
    dasm_growpc(&state, npc);

    dasm_State** Dst = &state;

    int stack = 8;
    int stack2 = 9;

    | .code
    | ->test_main:
    | push {r(stack), lr}
    | vpop {s16-s31}
    | vldm r(stack), {s(stack)-s(stack2)}
    | vmul.f32 s(stack), s(stack), s(stack)
    | b ptr strlen
    int z = 0x1E;
    | ssat r3, #z, r4, lsl #0
    | ssat r3, #z, r4, lsl #31
    | ssat r3, #z, r4, asr #1
    | ssat r3, #z, r4, asr #31
    | usat r3, #z, r4, lsl #31
    | usat r3, #z, r4, asr #31
    int x = 0x20;
    int y = -64;
    | ldrd r2, r3, [pc, #x]
    | strd r4, r5, [pc, #y]

    size_t sz;
    dasm_link(Dst, &sz);
    void* buf = malloc(sz);
    dasm_encode(Dst, buf);

    size_t len = state->codesize;
    dasm_free(&state);
    const unsigned char* fn = (const unsigned char*)labels[lbl_test_main];

    printf("code size = %zu\n", len);
    for (size_t i = 0; i < len; i += 16) {
        printf("%08X: ", (unsigned int)i);
        size_t left = (i + 16 < len) ? 16 : len - i;
        for (size_t j = 0; j < left; ++j)
            printf(" %02X", fn[i+j]);
        printf("\n");
    }

    free(buf);
    getchar();

    return 0;
}